{"version":3,"sources":["server.js"],"names":["express","require","http","socketIo","fs","path","app","server","createServer","io","DATA_FILE_PATH","join","__dirname","loadData","existsSync","rawData","readFileSync","JSON","parse","globalScore","lastUpdated","Date","now","dailyStats","error","console","saveData","data","writeFileSync","stringify","gameData","use","get","req","res","sendFile","on","socket","emit","today","toISOString","split","setInterval","PORT","process","env","listen","log"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst http = require('http');\r\nconst socketIo = require('socket.io');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconst app = express();\r\nconst server = http.createServer(app);\r\nconst io = socketIo(server);\r\n\r\n// 데이터 파일 경로\r\nconst DATA_FILE_PATH = path.join(__dirname, 'clickData.json');\r\n\r\n// 데이터 로드 함수\r\nfunction loadData() {\r\n    try {\r\n        if (fs.existsSync(DATA_FILE_PATH)) {\r\n            const rawData = fs.readFileSync(DATA_FILE_PATH, 'utf8');\r\n            return JSON.parse(rawData);\r\n        }\r\n        return { \r\n            globalScore: 0, \r\n            lastUpdated: Date.now(),\r\n            dailyStats: {}\r\n        };\r\n    } catch (error) {\r\n        console.error('Error loading data:', error);\r\n        return { \r\n            globalScore: 0, \r\n            lastUpdated: Date.now(),\r\n            dailyStats: {}\r\n        };\r\n    }\r\n}\r\n\r\n// 데이터 저장 함수\r\nfunction saveData(data) {\r\n    try {\r\n        fs.writeFileSync(DATA_FILE_PATH, JSON.stringify(data, null, 2));\r\n    } catch (error) {\r\n        console.error('Error saving data:', error);\r\n    }\r\n}\r\n\r\n// 초기 데이터 로드\r\nlet gameData = loadData();\r\n\r\n// 정적 파일 제공 미들웨어 설정\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n// 메인 라우트 설정\r\napp.get('/', (req, res) => {\r\n    res.sendFile(path.join(__dirname, 'public', 'index.html'));\r\n});\r\n\r\nio.on('connection', (socket) => {\r\n    // 연결 시 최신 데이터 전송\r\n    socket.emit('initialData', {\r\n        globalScore: gameData.globalScore,\r\n        lastUpdated: gameData.lastUpdated\r\n    });\r\n\r\n    // 클릭 이벤트 처리\r\n    socket.on('click', () => {\r\n        // 글로벌 스코어 증가\r\n        gameData.globalScore++;\r\n        \r\n        // 현재 날짜 기준 일일 통계 업데이트\r\n        const today = new Date().toISOString().split('T')[0];\r\n        if (!gameData.dailyStats[today]) {\r\n            gameData.dailyStats[today] = 1;\r\n        } else {\r\n            gameData.dailyStats[today]++;\r\n        }\r\n\r\n        // 마지막 업데이트 시간 갱신\r\n        gameData.lastUpdated = Date.now();\r\n\r\n        // 데이터 저장\r\n        saveData(gameData);\r\n\r\n        // 모든 클라이언트에게 업데이트 브로드캐스트\r\n        io.emit('scoreUpdate', {\r\n            globalScore: gameData.globalScore,\r\n            lastUpdated: gameData.lastUpdated\r\n        });\r\n    });\r\n\r\n    // 일일 통계 요청 핸들러\r\n    socket.on('requestDailyStats', () => {\r\n        socket.emit('dailyStatsResponse', gameData.dailyStats);\r\n    });\r\n});\r\n\r\n// 주기적인 데이터 백업 (옵션)\r\nsetInterval(() => {\r\n    saveData(gameData);\r\n}, 60000); // 1분마다 저장\r\n\r\nconst PORT = process.env.PORT || 3000;\r\nserver.listen(PORT, () => {\r\n    console.log(`Server running on port ${PORT}`);\r\n});\r\n"],"file":"server.dev.js"}